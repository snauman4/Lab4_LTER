[
  {
    "objectID": "lab4.html",
    "href": "lab4.html",
    "title": "Lab 4: LTER Network Data",
    "section": "",
    "text": "This lab will walk us through some basic statistical tests in R, including chi-square, t-tests, and correlation tests. We will use data from the Long-Term Ecological Research (LTER) Network, which is a collaborative effort involving more than 2000 scientists and students investigating ecological processes over long temporal and broad spatial scales. The basics of this lab were adopted from a previous version of this course. This qmd for this lab can be downloaded here. Please download it into the repo of your choice and open it in RStudio to work through this lab:"
  },
  {
    "objectID": "lab4.html#explore-the-dataset",
    "href": "lab4.html#explore-the-dataset",
    "title": "Lab 4: LTER Network Data",
    "section": "Explore the dataset",
    "text": "Explore the dataset\nTo start, we’ll begin looking at the and_vertebrates dataset. Start this section with some EDA to understand its structure, variables and data types:\n\n\nCode\n# View the data structure\nglimpse(and_vertebrates)\n\n\nRows: 32,209\nColumns: 16\n$ year        &lt;dbl&gt; 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987, 1987…\n$ sitecode    &lt;chr&gt; \"MACKCC-L\", \"MACKCC-L\", \"MACKCC-L\", \"MACKCC-L\", \"MACKCC-L\"…\n$ section     &lt;chr&gt; \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\", \"CC\"…\n$ reach       &lt;chr&gt; \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\", \"L\"…\n$ pass        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ unitnum     &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2…\n$ unittype    &lt;chr&gt; \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\"…\n$ vert_index  &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, …\n$ pitnumber   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ species     &lt;chr&gt; \"Cutthroat trout\", \"Cutthroat trout\", \"Cutthroat trout\", \"…\n$ length_1_mm &lt;dbl&gt; 58, 61, 89, 58, 93, 86, 107, 131, 103, 117, 100, 127, 99, …\n$ length_2_mm &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ weight_g    &lt;dbl&gt; 1.75, 1.95, 5.60, 2.15, 6.90, 5.90, 10.50, 20.60, 9.55, 13…\n$ clip        &lt;chr&gt; \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"NONE\", \"N…\n$ sampledate  &lt;date&gt; 1987-10-07, 1987-10-07, 1987-10-07, 1987-10-07, 1987-10-0…\n$ notes       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n\n\nCode\nvis_dat(and_vertebrates)\n\n\n\n\n\n\n\n\n\nCode\n# Explore the metadata in the Help pane\n?and_vertebrates\n\n\nThis data set contains length and weight observations for three aquatic species in clear cut and old growth coniferous forest sections of Mack Creek in HJ Andrews Experimental Forest in Oregon. The three species are Cutthroat trout, Coastal giant salamander and Cascade torrent salamander."
  },
  {
    "objectID": "lab4.html#chi-square---categorical-analysis",
    "href": "lab4.html#chi-square---categorical-analysis",
    "title": "Lab 4: LTER Network Data",
    "section": "Chi-square - Categorical Analysis",
    "text": "Chi-square - Categorical Analysis\nWhen you are working with two categorical variables, the statistical test you use is a Chi-square test. This test helps identify a relationship between your two categorical variables.\nFor example, we have two categorical variables in the and_vertebrates data set:\n\nsection = two forest sections, clear cut (CC) and old growth (OG)\nunittype = stream channel unit classification type (C = cascade, I = riffle, IP = isolated pool (not connected to channel), P = pool, R = rapid, S = step (small falls), SC = side channel, NA = not sampled by unit)\n\nLets focus this question on Cutthroat trout. First explore the abundance of cutthroat trout in different channel types, using the count() function to return the total count/number of observations in each group - making sure to limit your analysis to “Cutthroat trout”.\n\n\nCode\nand_vertebrates |&gt; \n  filter(species == \"Cutthroat trout\") |&gt; \n  count(unittype)\n\n\n# A tibble: 8 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C        11419\n2 I           23\n3 IP         105\n4 P         5470\n5 R          420\n6 S            9\n7 SC        2377\n8 &lt;NA&gt;       610\n\n\nThis output tells us that there are quite a few observations with the NA category, meaning channel type was unknown or not recorded. Let’s edit the workflow above slightly, using drop_na() to remove any rows within a specified column (or columns) that have NA values:\n\n\nCode\nand_vertebrates |&gt; \n  filter(species == \"Cutthroat trout\") |&gt; \n  drop_na(unittype) |&gt; \n  count(unittype)\n\n\n# A tibble: 7 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C        11419\n2 I           23\n3 IP         105\n4 P         5470\n5 R          420\n6 S            9\n7 SC        2377\n\n\nThis returns just about the same data frame as the first method, but now with the NA category removed because it dropped any observations that were NA for unittype.\nFrom this we also observe that the highest Cutthroat trout abundances are found in cascade (C), pool (P), and side channel (SC) habitats.\nNow, our question expands beyond this one categorical variable (channel type) and we want to know if abundance is affected by both channel and and forest type (section). Here, our null hypothesis is that forest and channel type are independent. To test this, we use the chisq.test() to carry out a chi-square test, but first we have to reformat our data into a contingency table.\nA contingency table is in matrix format, where each cell is the frequency (in this case seen as abundance) of Cutthroat trout in each combination of categorical variables (forest type and channel unit). We can create a contingency table with the table() function. For this analysis, lets also keep just the 3 most abundant unit types for Cutthroat trout (C, P and SC).\n\n\nCode\n# First clean the dataset to create the contingency table from\ntrout_clean &lt;- and_vertebrates  |&gt;  \n  #filter Cutthroat trout\n  filter(species == \"Cutthroat trout\") |&gt; \n  # lets test using just the 3 most abundant unittypes\n  filter(unittype %in% c(\"C\", \"P\", \"SC\")) |&gt; \n  # drop NAs for both unittype and section\n  drop_na(unittype, section)\n\ncont_table &lt;- table(trout_clean$section, trout_clean$unittype)\n\n\nTo execute the Chi-square test does not take that much code, but it is important to note that by default, chisq.test() assumes the null hypothesis is that all frequencies have equal probability. If you have different pre-conceived frequency probabilities for your data you have to define those within the chisq.test() function.\n\n\nCode\nchisq.test(cont_table)\n\n\n\n    Pearson's Chi-squared test\n\ndata:  cont_table\nX-squared = 188.68, df = 2, p-value &lt; 2.2e-16\n\n\nLooking at these results, we see an extremely small p-valuetelling us there is a significant relationship between forest type and channel unit (i.e., we rejected our null hypothesis).\nLets look at the abundance distribution visually:\n\n\nCode\ntrout_clean  |&gt;  \n  count(unittype, section)  |&gt;  \n  ggpubr::ggbarplot(x = 'unittype', y = 'n', \n                    fill = 'section', \n                    palette = c(\"#00AFBB\", \"#E7B800\"),\n                    add = \"mean_se\")"
  },
  {
    "objectID": "lab4.html#t-test---compare-two-means",
    "href": "lab4.html#t-test---compare-two-means",
    "title": "Lab 4: LTER Network Data",
    "section": "t-test - Compare two means",
    "text": "t-test - Compare two means\nPrevious work has shown that forest harvesting practics can impact aquatic vertebrate biomass (Kaylor & Warren 2017). Using the and_vertebrates data set we can investigate this by comparing weight to forest type (clear cut or old growth). This involves a test to compare the means (average weight) among two groups (clear cut and old growth forests) using a t-test.\nLet’s focus on conducting this test for Cutthroat trout. We can use the same trout_clean data set we made earlier so long as we drop all NAs in weight_g. Once this is done, we can visualize the differences in weight among forest type with a boxplot:\n\n\nCode\ntrout_clean |&gt; \n  drop_na(weight_g) |&gt; \n  ggpubr::ggviolin(x = \"section\", \n                   y     = \"weight_g\", \n                   add   = \"boxplot\",\n                   color = \"section\",\n                   palette = c(\"#00AFBB\", \"#E7B800\")) \n\n\n\n\n\n\n\n\n\nWe don’t see too much of a difference based on this visual, but we need to conduct the statistical test to verify. Before we dive into the statistical t-test, we must check our assumptions!\nTest Assumptions: A t-test assumes the variance of each group is equal and the data are normally distributed.\nEqual Variance We can test for equal variances with the function var.test(), where the null hypothesis is that the variances are equal. In this step, we need two vectors of the weights in each separate forest section. You can use pull() to convert a single column of a data frame/tibble to a vector, and we want to do this for clear cut and old growth forests.\n\n\nCode\ncc_weight &lt;- trout_clean |&gt; \n  filter(section == \"CC\") |&gt; \n  pull(weight_g)\n\nog_weight &lt;- trout_clean |&gt; \n  filter(section == \"OG\") |&gt; \n  pull(weight_g)\n\nvar.test(cc_weight, og_weight)\n\n\n\n    F test to compare two variances\n\ndata:  cc_weight and og_weight\nF = 1.2889, num df = 6310, denom df = 5225, p-value &lt; 2.2e-16\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 1.223686 1.357398\nsample estimates:\nratio of variances \n          1.288892 \n\n\nThe results of this test suggests the variances are not equal. How do we know this? If you can’t remember, please refresh your memory of the null hypothesis for the variance test and how to interpret the p-value.\n\n\n\n\n\n\nNote\n\n\n\nOne option for data with unequal variances is to use the non parametric Welch t-test, which does not assume equal variances. We will explore this test later.\n\n\nNormal Distribution A t-test mandates data with a normal distribtution. Here we can use a visual method to access the normality of the data:\n\n\nCode\nggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = \"Clear Cut\"), \n                  ggpubr::gghistogram(og_weight, main = \"Old Growth\"))\n\n\n\n\n\n\n\n\n\nWe can see from the histograms that the data are very right skewed. When we see a heavy right skew, we know a log transform can help normalize the data. Let’s check the variances like we did before using the log transformed values:\n\n\nCode\nvar.test(log(cc_weight), log(og_weight))\n\n\n\n    F test to compare two variances\n\ndata:  log(cc_weight) and log(og_weight)\nF = 1.0208, num df = 6310, denom df = 5225, p-value = 0.4374\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.9691443 1.0750427\nsample estimates:\nratio of variances \n          1.020787 \n\n\nNow we have a much higher p-value, indicating support for the null that the variances of log-transformed data are equal. So we can use the default t.test() test which assumes equal variances, but only on a log transformed weight variable.\nThe t.test() function takes in your dependent (in our case trout weight) and independent (forest type) variables as vectors. The order of the variables in the t.test() function is {dependent variable} ~ {independent variable}. We use the ~ to specify a model, telling the test we want to know if weight varies by forest section.\nRemember we also want to log transform the weight values and then specify that our variances are equal since we confirmed that with var.test() above, so the final t.test() call would be this:\n\n\nCode\nt.test(log(trout_clean$weight_g) ~ trout_clean$section, var.equal = TRUE)\n\n\n\n    Two Sample t-test\n\ndata:  log(trout_clean$weight_g) by trout_clean$section\nt = 2.854, df = 11535, p-value = 0.004324\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.02222425 0.11969560\nsample estimates:\nmean in group CC mean in group OG \n        1.457042         1.386082 \n\n\nThe output of this test gives us the test statistics, p-value, and the means for each of our forest groups. Given the p-value of 0.0043, we reject the null hypothesis (mean Cutthroat weight is the same in clear cut and old growth forest sections), and looking at our results - specifically the means - we can conclude that Cutthroat trout weight was observed to be significantly higher in clear cut forests compared to old growth forests. Remember that the mean weight values are log transformed and not the raw weight in grams. The relationship can still be interpreted the same, but you will want to report the means from the raw weight data.\nHow does this relate to the original hypothesis based on the graph we made at the beginning of this section?\nWelch Two Sample t-test\nAlternatively, instead of transforming our variable we can change the default t.test() argument by specifying var.equal = FALSE, which will then conduct a Welch t-test, which does not assume equal variances among groups.\n\n\nCode\nt.test(trout_clean$weight_g ~ trout_clean$section, var.equal = FALSE)\n\n\n\n    Welch Two Sample t-test\n\ndata:  trout_clean$weight_g by trout_clean$section\nt = 4.5265, df = 11491, p-value = 6.056e-06\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.4642016 1.1733126\nsample estimates:\nmean in group CC mean in group OG \n        8.988807         8.170050 \n\n\nWhile using a slightly different method, our conclusions are the same, finding that Cutthroat trout had significantly higher weights in clear cut forests than old growth.\n\nNote: In the t.test() function you can add paired = TRUE to conduct a paired t-test. These are for cases when the groups are ‘paired’ for each observation, meaning each group/treatment was applied to the same individual, such as experiments that test the impact of a treatment, with measurements before and after the experiment."
  },
  {
    "objectID": "lab4.html#correlation---assess-relationships",
    "href": "lab4.html#correlation---assess-relationships",
    "title": "Lab 4: LTER Network Data",
    "section": "Correlation - Assess relationships",
    "text": "Correlation - Assess relationships\nTo assess the relationship between two continuous variables, you use a correlation test, which is the cor.test() function. Correlation tests assess the presence of a significant relationship and the strength of each relationship (i.e., the correlation coefficient). There are multiple correlation methods you can use with this function but by default, it uses the Pearson correlation method which assumes your data are normally distributed and there is a linear relationship. If these assumptions are not met, you can use a Spearman Rank correlation test, a non-parametric test that is not sensitive to the variable distribution. To use this method, specify spearman for method.\nFor our and_vertebrates data set, we can test the relationship of length and weight. Let’s test the hypothesis that body length is positively correlated with weight, such that longer individuals will also weigh more, specifically looking at the Coastal Giant salamander.\nFirst let’s clean our data set to just include the Coastal giant salamander and remove missing values for length and weight.\n\n\nCode\nsally_clean &lt;- and_vertebrates |&gt; \n  filter(species == \"Coastal giant salamander\") |&gt; \n  drop_na(length_2_mm, weight_g)\n\n\nTesting Assumptions\nLet’s look at the distribution of these variables first:\n\n\nCode\nggarrange(gghistogram(sally_clean$length_2_mm, title = \"Length\"),\ngghistogram(sally_clean$weight_g, title = \"Weight\"))\n\n\n\n\n\n\n\n\n\nThey both look pretty skewed, therefore likely not normally distributed. We can statistically test if a variable fits a normal distribution with the shapiro.test() function, which is the Shapiro-Wilk normality text. However note that this function only runs for 5,000 observations or less, so we will test for normality for a sample of our sally_clean data set:\n\n\nCode\ns &lt;- sally_clean |&gt; \n  slice_sample(n = 5000) \n\nshapiro.test(s$length_2_mm)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$length_2_mm\nW = 0.93049, p-value &lt; 2.2e-16\n\n\nCode\nshapiro.test(s$weight_g)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  s$weight_g\nW = 0.55884, p-value &lt; 2.2e-16\n\n\nThe null hypothesis of the Shapiro-Wilk normality test is that the variable is normally distributed, so a significant p-value less than 0.05 (as we see for both of our variables here) tells use that our data does not fit a normal distribution.\nTherefore we have two options as we did with our earlier t-test example: transform the variables or use the non-parametric test.\nVariable transformation\nLets try the first option by log transforming our variables, first viewing the log-transformed distribution for each variable.\n\n\nCode\nggarrange(\n gghistogram(log(sally_clean$length_2_mm), title = \"Length\"), \n gghistogram(log(sally_clean$weight_g), title = \"Weight\") \n)\n\n\n\n\n\n\n\n\n\nSince the log-transformed data look normally distributed (note that we can test using the Shapiro-Wilk normality test on the log-transformed data), we can use the Pearson’s correlation test (the default for cor.test()). All we need to add to the cor.test() argument is the two variables of our sally_clean data set we want to test a relationship for, and keep them log-transformed since those distributions looked closer to a normal distribution (visually at least).\n\n\nCode\ncor.test(log(sally_clean$length_2_mm), log(sally_clean$weight_g))\n\n\n\n    Pearson's product-moment correlation\n\ndata:  log(sally_clean$length_2_mm) and log(sally_clean$weight_g)\nt = 402.85, df = 6229, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9804036 0.9822403\nsample estimates:\n      cor \n0.9813443 \n\n\nFrom these results we see a very small p-value, meaning there is a significant association between the two, and a correlation coefficient of 0.98, representing a strong, positive correlation.\nLet’s look at this correlation visually:\n\n\nCode\nsally_clean |&gt; \n  mutate(log_length = log(length_2_mm), log_weight = log(weight_g)) |&gt; \n  ggscatter(x = 'log_length', \n            y = 'log_weight', \n            alpha = .35,\n            add = \"loess\")\n\n\n\n\n\n\n\n\n\nSpearman Correlation Test\nLet’s now perform the correlation test again but keeping our raw data and instead specifying method = 'spearman', as the Spearman test is better for non-parametric and non-linear data sets.\n\n\nCode\ncor.test(sally_clean$length_2_mm, sally_clean$weight_g, method = \"spearman\")\n\n\n\n    Spearman's rank correlation rho\n\ndata:  sally_clean$length_2_mm and sally_clean$weight_g\nS = 819296957, p-value &lt; 2.2e-16\nalternative hypothesis: true rho is not equal to 0\nsample estimates:\n      rho \n0.9796802 \n\n\nThese results also represent a significant, positive relationship between length and weight for the Coastal Giant salamander, with a very high correlation coefficient."
  },
  {
    "objectID": "lab4.html#exercises-part-1",
    "href": "lab4.html#exercises-part-1",
    "title": "Lab 4: LTER Network Data",
    "section": "Exercises: Part 1",
    "text": "Exercises: Part 1\nEach question requires you to carry out a statistical analysis to test some hypothesis related to the and_vertebrates data set. To answer each question fully:\n\nInclude the code you used to clean the data and conduct the appropriate statistical test. (Including the steps to assess and address your statistical test assumptions).\nReport the findings of your test in proper scientific format (with the p-value in parentheses).\n\n\n1. Conduct a chi-square test similar to the one carried out above, but test for a relationship between forest type (section) and channel unit (unittype) for Coastal giant salamander abundance. Keep all unittypes instead of filtering any like we did for the Cutthroat trout (10 pts.)\n\n\nCode\n# abundance of Coastal giant salamander\nand_vertebrates %&gt;%\n  filter(species == \"Coastal giant salamander\") %&gt;%\n  count(unittype)\n\n\n# A tibble: 6 × 2\n  unittype     n\n  &lt;chr&gt;    &lt;int&gt;\n1 C         7697\n2 IP          50\n3 P         1943\n4 R           72\n5 S            2\n6 SC        1994\n\n\nCode\n# clean data to prepare for contingency table\nsalamander_clean &lt;- and_vertebrates %&gt;%\n  filter(species == \"Coastal giant salamander\") %&gt;%\n  drop_na(unittype, section)\n\n# Null hypothesis: forest type and channel unit are NOT correlated\n\n# creating contingency table for 'section' and 'unittype'\nsal_table &lt;- table(salamander_clean$section, salamander_clean$unittype)\n\n# chi-square test\nchisq.test(sal_table)\n\n\n\n    Pearson's Chi-squared test\n\ndata:  sal_table\nX-squared = 200.71, df = 5, p-value &lt; 2.2e-16\n\n\n\nThe chi-square test for the relationship between forest type and channel unit for the Coastal Giant Salamander resulted in a very small p-value (&lt; 2.2e-16). This inidicates a significant relationship, allowing us to reject the null hypothesis.\n\n2. Test the hypothesis that there is a significant difference in species biomass between clear cut and old growth forest types for the Coastal Giant salamander. (10 pts.)\n\n\nCode\n# visualizing the differences in weight among forest types\nsalamander_clean %&gt;%\n  drop_na(weight_g) %&gt;%\n  ggpubr::ggviolin(x = \"section\",\n                   y = \"weight_g\",\n                   add = \"boxplot\",\n                   color = \"section\",\n                   palette = c(\"#00AFBB\", \"#E7B800\"))\n\n\n\n\n\n\n\n\n\nCode\n  # From the boxplot, there is little variation shown, thus we must conduct a t-test to test our assumptions: the variance of clear clut and old growth forest types are equal and the data is normally distributed.\n\n# Null hypothesis: the species biomass for the salamander is not affected by forest type.\n\n# t-test 1: the variance is equal\ncc_weight &lt;- salamander_clean %&gt;%\n  filter(section == \"CC\") %&gt;%\n  pull(weight_g)\nog_weight &lt;- salamander_clean %&gt;%\n  filter(section == \"OG\") %&gt;%\n  pull(weight_g)\nvar.test(cc_weight, og_weight)\n\n\n\n    F test to compare two variances\n\ndata:  cc_weight and og_weight\nF = 0.82901, num df = 3027, denom df = 3309, p-value = 1.439e-07\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.7732148 0.8889213\nsample estimates:\nratio of variances \n         0.8290065 \n\n\nCode\n  # The results of the t-test testing the variance between clear cut and old growth forest types shows great significant difference based on the small p-value (1.439e-07), not meeting the assumption of the first test.\n\n# t-test 2: the data is normally distributed\nggpubr::ggarrange(ggpubr::gghistogram(cc_weight, main = \"Clear Cut\"), \n                  ggpubr::gghistogram(og_weight, main = \"Old Growth\"))\n\n\n\n\n\n\n\n\n\nCode\n    # The results of the second t-test testing the distribution of the weight of the forest types shows very right-skewed results, not meeting the normal distribution. \n  # log transformation\nvar.test(log(cc_weight), log(og_weight))\n\n\n\n    F test to compare two variances\n\ndata:  log(cc_weight) and log(og_weight)\nF = 0.90548, num df = 3027, denom df = 3309, p-value = 0.005299\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.8445382 0.9709179\nsample estimates:\nratio of variances \n         0.9054763 \n\n\nCode\n    # Although the p-value is much larger using the log transformed data (0.005299), it still remains less than 0.05. However, it more strongly supports the null, meaning we can still use it to confirm the variation in clear cut versus old growth forests. \n\n# t-test \nt.test(log(salamander_clean$weight_g) ~ salamander_clean$section, var.equal = TRUE)\n\n\n\n    Two Sample t-test\n\ndata:  log(salamander_clean$weight_g) by salamander_clean$section\nt = 10.091, df = 6336, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means between group CC and group OG is not equal to 0\n95 percent confidence interval:\n 0.2033610 0.3014243\nsample estimates:\nmean in group CC mean in group OG \n        1.828557         1.576164 \n\n\nCode\n  # Given the very small p-value (&lt; 2.2e-16) from the default t-test, we can reject the null hypothesis that the species biomass for the Coastal giant salamander is not affected by forest type. The weight for the salamander was observed to be significantly higher in clear cut forests compared to old growth forests. \n\n\n\nFrom the boxplot, there is little variation shown, thus we must conduct a t-test to test our assumptions: the variance of clear clut and old growth forest types are equal and the data is normally distributed. The results of the t-test testing the variance between clear cut and old growth forest types shows great significant difference based on the small p-value (1.439e-07), not meeting the assumption of the first test. The results of the second t-test testing the distribution of the weight of the forest types shows very right-skewed results, not meeting the normal distribution. Although the p-value is much larger using the log transformed data (0.005299), it still remains less than 0.05. However, it more strongly supports the null, meaning we can still use it to confirm the variation in clear cut versus old growth forests. Given the very small p-value (&lt; 2.2e-16) from the default t-test, we can reject the null hypothesis that the species biomass for the Coastal giant salamander is not affected by forest type. The weight for the salamander was observed to be significantly higher in clear cut forests compared to old growth forests.\n\n3. Test the correlation between body length (snout to fork length) and body mass for Cutthroat trout. (Hint: run ?and_vertebrates to find which length variable represents snout to fork length) (10 pts.)\n\n\nCode\n?and_vertebrates\n\n# cleaning data\ncutthroat_clean &lt;- and_vertebrates %&gt;%\n  filter(species == \"Cutthroat trout\") %&gt;%\n  drop_na(length_1_mm, weight_g)\n\n# assumption: data is normally distributed and body length and body mass have a linear relationship\n\nggarrange(gghistogram(cutthroat_clean$length_1_mm, title = \"Length\"),\n          gghistogram(cutthroat_clean$weight_g, title = \"Weight\"))\n\n\n\n\n\n\n\n\n\nCode\n  # The data is skewed right rather than following a normal distribution. \n\n# shapiro-wilk normality test\nc &lt;- cutthroat_clean %&gt;%\n  slice_sample(n = 5000)\nshapiro.test(c$length_1_mm)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  c$length_1_mm\nW = 0.94416, p-value &lt; 2.2e-16\n\n\nCode\nshapiro.test(c$weight_g)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  c$weight_g\nW = 0.80279, p-value &lt; 2.2e-16\n\n\nCode\n  # Both the body length and the weight from the shapiro-wilk test resulted in very low p-values (&lt; 2.2e-16), further proving that the data does not follow a normal distribution. \n\n# log transformation\nggarrange(gghistogram(log(cutthroat_clean$length_1_mm), title = \"Length\"),\n          gghistogram(log(cutthroat_clean$weight_g), title = \"Weight\"))\n\n\n\n\n\n\n\n\n\nCode\n  # Using log transformations to visualize the data, the histogram appears bimodal. \n\n# correlation test\ncor.test(log(cutthroat_clean$length_1_mm), log(cutthroat_clean$weight_g))\n\n\n\n    Pearson's product-moment correlation\n\ndata:  log(cutthroat_clean$length_1_mm) and log(cutthroat_clean$weight_g)\nt = 915.66, df = 12590, p-value &lt; 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9923125 0.9928295\nsample estimates:\n      cor \n0.9925755 \n\n\nCode\n  # With the correlation coefficient being 0.99 along with a low p-value (&lt; 2.2e-16), we can conclude a very strong positive correlation between body length (snout-fork) and weight for cutthroat trout.\n\n# visualizing correlation\ncutthroat_clean %&gt;%\n  mutate(log_length = log(length_1_mm), log_weight = log(weight_g)) %&gt;%\n  ggscatter(x = 'log_length',\n            y = 'log_weight',\n            alpha = .35,\n            add = \"loess\")\n\n\n\n\n\n\n\n\n\nCode\n  # Visualizing the correlation between the data allows us to view the linear relationship between body length and mass of the cutthroat trout. \n\n\n\nFrom creating a histogram to visualize the distribution of the variables of body length (snout-fork) and weight, the data is skewed right rather than following a normal distribution. Both the body length and the weight from the shapiro-wilk test resulted in very low p-values (&lt; 2.2e-16), further proving that the data does not follow a normal distribution. Using log transformations to visualize the data, the histogram appears bimodal. With the correlation coefficient being 0.99 along with a low p-value (&lt; 2.2e-16), we can conclude a very strong positive correlation between body length (snout-fork) and weight for cutthroat trout. Visualizing the correlation between the data allows us to view the linear relationship between body length and mass of the cutthroat trout."
  },
  {
    "objectID": "lab4.html#explore-the-data-set",
    "href": "lab4.html#explore-the-data-set",
    "title": "Lab 4: LTER Network Data",
    "section": "Explore the Data set",
    "text": "Explore the Data set\nThis data set consists of Fiddler crab body size measured in salt marshes from Florida to Massachusetts during summer 2016 at Plum Island Ecosystem LTER.\n\n\nCode\nglimpse(pie_crab)\n\n\nRows: 392\nColumns: 9\n$ date          &lt;date&gt; 2016-07-24, 2016-07-24, 2016-07-24, 2016-07-24, 2016-07…\n$ latitude      &lt;dbl&gt; 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, …\n$ site          &lt;chr&gt; \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", \"GTM\", …\n$ size          &lt;dbl&gt; 12.43, 14.18, 14.52, 12.94, 12.45, 12.99, 10.32, 11.19, …\n$ air_temp      &lt;dbl&gt; 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, 21.792, …\n$ air_temp_sd   &lt;dbl&gt; 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, 6.391, …\n$ water_temp    &lt;dbl&gt; 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, 24.502, …\n$ water_temp_sd &lt;dbl&gt; 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, 6.121, …\n$ name          &lt;chr&gt; \"Guana Tolomoto Matanzas NERR\", \"Guana Tolomoto Matanzas…\n\n\nCode\nvis_dat(pie_crab)\n\n\n\n\n\n\n\n\n\nLearn more about each variable:\n\n\nCode\n?pie_crab\n\n\nThis data set provides a great opportunity to explore Bergmann’s rule: where organisms at higher latitudes are larger than those at lower latitudes. There are various hypotheses on what drives this phenomenon, which you can read more about in Johnson et al. 2019.\nWe have a continuous size variable (carapace width in mm), our dependent variable, and various predictor variables: site (categorical), latitude (continuous), air temperature (continuous) and water temperature (continuous).\nLet’s explore the sample size at each site and how many sites are in this data set\n\n\nCode\n# sample size per site\ncount(pie_crab, site)\n\n\n# A tibble: 13 × 2\n   site      n\n   &lt;chr&gt; &lt;int&gt;\n 1 BC       37\n 2 CC       27\n 3 CT       33\n 4 DB       30\n 5 GTM      28\n 6 JC       30\n 7 NB       29\n 8 NIB      30\n 9 PIE      28\n10 RC       25\n11 SI       30\n12 VCR      30\n13 ZI       35\n\n\nWe have 13 sites with ~30 individual male crabs measured at each site.\nLet’s also check the range of our continuous variables:\n\n\nCode\nsummary(pie_crab)\n\n\n      date               latitude         site                size      \n Min.   :2016-07-24   Min.   :30.00   Length:392         Min.   : 6.64  \n 1st Qu.:2016-07-28   1st Qu.:34.00   Class :character   1st Qu.:12.02  \n Median :2016-08-01   Median :39.10   Mode  :character   Median :14.44  \n Mean   :2016-08-02   Mean   :37.69                      Mean   :14.66  \n 3rd Qu.:2016-08-09   3rd Qu.:41.60                      3rd Qu.:17.34  \n Max.   :2016-08-13   Max.   :42.70                      Max.   :23.43  \n    air_temp      air_temp_sd      water_temp    water_temp_sd  \n Min.   :10.29   Min.   :6.391   Min.   :13.98   Min.   :4.838  \n 1st Qu.:12.05   1st Qu.:8.110   1st Qu.:14.33   1st Qu.:6.567  \n Median :13.93   Median :8.410   Median :17.50   Median :6.998  \n Mean   :15.20   Mean   :8.654   Mean   :17.65   Mean   :7.252  \n 3rd Qu.:18.63   3rd Qu.:9.483   3rd Qu.:20.54   3rd Qu.:7.865  \n Max.   :21.79   Max.   :9.965   Max.   :24.50   Max.   :9.121  \n     name          \n Length:392        \n Class :character  \n Mode  :character"
  },
  {
    "objectID": "lab4.html#anova",
    "href": "lab4.html#anova",
    "title": "Lab 4: LTER Network Data",
    "section": "ANOVA",
    "text": "ANOVA\nOur first question is if there is a significant difference in crab size among the 13 sites? Since we have a continuous response variable (size) and a categorical predictor (site) with &gt; 2 groups (13 sites), we will use an ANOVA test.\nLet’s first visualize the distribution of sizes for each site using a new visualization technique with ggplot called geom_jitter(). This function adds a small amount of variation to each point, so that all our points for each site are not stacked on top of each other.\n\n\nCode\npie_crab |&gt; \n  ggboxplot(x = 'site', y = 'size', col = 'site') +\n  geom_jitter(size =.25) + \n  theme(legend.postition = \"none\")\n\n\n\n\n\n\n\n\n\nIn doing this, it ;ooks like there are differences among sites, tempting us to test for statistical significance with the ANOVA test."
  },
  {
    "objectID": "lab4.html#assumptions",
    "href": "lab4.html#assumptions",
    "title": "Lab 4: LTER Network Data",
    "section": "Assumptions",
    "text": "Assumptions\nNormality\nANOVA assumes normal distributions within each group. We can utlize out nest/map approach to assess the normality of our data. We will use the Shapiro-Wilk normality test, which is a good test for small sample sizes.\n\n\nCode\nnorms &lt;- pie_crab |&gt; \n  nest(data = -site) |&gt;\n  mutate(Shapiro = map(data, ~ shapiro.test(.x$size)),\n         n = map_dbl(data, nrow),\n         glance_shapiro = map(Shapiro, broom::glance)) |&gt;\n  unnest(glance_shapiro)\n\nflextable::flextable(dplyr::select(norms, site, n, statistic, p.value)) |&gt;\n  flextable::set_caption(\"Shapiro-Wilk normality test for size at each site\")\n\n\nsitenstatisticp.valueGTM280.90078140.0119337484SI300.97053520.5539208550NIB300.97282970.6191340731ZI350.97445830.5765589900RC250.93150620.0941588802VCR300.94446820.1200262239DB300.95762710.2690631942JC300.96347540.3788327942CT330.92773650.0301785639NB290.96753670.4949587443CC270.93546590.0941803007BC370.88857210.0014402753PIE280.84893990.0008899392\n\n\nIn nearly all cases, the p-value &gt; 0.01 (with the exception of BC and PIE), so we generally accept the null that this data does fit the normal distribution assumption across groups.\n\nA residual value is computed for each observation as the difference between an individual value in a group and the mean of the group.\n\nWe can first compute the residuals from the ANOVA model using the aov() function. To carry out the ANOVA model, we specify the name of our continuous response (size) ~ (which you read as ‘by’) the name of our categorical predictor (site), and specify the data set name.\n\n\nCode\nres_aov &lt;- aov(size ~ site, data = pie_crab)\n\n\nWe can then pull out the residuals of this aov() model the same way we index columns with the $ operator. Let’s check the distribution visually and statistically.\n\n\nCode\ngghistogram(res_aov$residuals)\n\n\n\n\n\n\n\n\n\nCode\nshapiro.test(res_aov$residuals)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  res_aov$residuals\nW = 0.99708, p-value = 0.7122\n\n\nThis returns a p-value of 0.71, so we accept the null hypothessis that this data fits a normal distribution assumption.\nEqual Variances\nTo test for equal variances among more than two groups, it is easiest to use a Levene’s Test. To use this test we need to install a new package called car, which you should have done at the beginning of this lesson.\n\n\nCode\nleveneTest(size ~ site, data = pie_crab)\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n       Df F value    Pr(&gt;F)    \ngroup  12  9.2268 1.151e-15 ***\n      379                      \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nANOVA\nSimilar to the var.test() function you’ve used before, the null hypothesis of the Levene’s test is that the variances are equal across all groups. Given this small p-value (denoted the the ‘Pr(&gt;F)’ value) we confirm that the variances of our groups are not equal. Therefore we need to use a Welch ANOVA (oneway.test), which we specify by setting var.equal = FALSE:\n\n\nCode\n#perform Welch's ANOVA\noneway.test(size ~ site, data = pie_crab, var.equal = FALSE)\n\n\n\n    One-way analysis of means (not assuming equal variances)\n\ndata:  size and site\nF = 39.108, num df = 12.00, denom df = 145.79, p-value &lt; 2.2e-16\n\n\nOur results here are highly significant, meaning that at least one of our site means is significantly different from the others. However, ANOVA tests don’t tell us which sites are significantly different. To tell which sites are different, we need to use the Tukey’s HSD post-hoc test which gives us pairwise comparisons.\nWith 13 sites, it results in a lot of pairwise comparisons. For the next example, let’s simplify our analysis to just check for differences among 3 sites, choosing sites at the two latitude extremes and one in the middle. We’ll also need to rerun the ANOVA on the data subset since the Tukey’s HSD uses the ANOVA model. We know that the data meet the normality assumption, and we should recheck the equality assumption within our data subset.\n\n\nCode\n# Filter a subset of the sites\npie_sites &lt;- pie_crab |&gt; \n  filter(site %in% c(\"GTM\", \"DB\", \"PIE\"))\n\n# Check for equal variance\nleveneTest(size ~ site, data = pie_sites)\n\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup  2   0.548 0.5802\n      83               \n\n\nCode\n# Note that the variances are equal (p = 0.5802), so we can proceed with the ANOVA\n\n# ANOVA for the data subset\npie_anova &lt;- aov(size ~ site, data = pie_sites)\n\n# View the ANOVA results \nsummary(pie_anova)\n\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)    \nsite         2  521.5  260.75   60.02 &lt;2e-16 ***\nResiduals   83  360.6    4.34                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "lab4.html#post-hoc-tukeys-hsd-test",
    "href": "lab4.html#post-hoc-tukeys-hsd-test",
    "title": "Lab 4: LTER Network Data",
    "section": "Post-hoc Tukey’s HSD test",
    "text": "Post-hoc Tukey’s HSD test\nFrom the ANOVA test, we find that at least one of our group means is significantly different from the others. Now we can use the TukeyHSD() function to test all the pairwise differences to see which groups are different from each other.\n\n\nCode\nTukeyHSD(pie_anova)\n\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = size ~ site, data = pie_sites)\n\n$site\n             diff       lwr       upr   p adj\nGTM-DB  -3.200786 -4.507850 -1.893722 3.0e-07\nPIE-DB   2.899929  1.592865  4.206992 2.9e-06\nPIE-GTM  6.100714  4.771306  7.430123 0.0e+00\n\n\nThis returns each combination of site comparisons and a p-value (the ‘p adj’ variable) for each."
  },
  {
    "objectID": "lab4.html#linear-regression",
    "href": "lab4.html#linear-regression",
    "title": "Lab 4: LTER Network Data",
    "section": "Linear Regression",
    "text": "Linear Regression\nLet’s more directly test Bergmann’s rule by testing for a relationship between carapace width and latitude. Since our predictor (latitude) is a continuous variable, we can conduct a simple linear regression.\nA note on assumptions Linear regression assumptions are normality and linearity. We tested the normality of size (the dependent variable) in the previous example, so we won’t test it again here. The linearity assumption will be tested by the linear model itself.\nTo conduct a regression model, we use the lm() function.\n\n\nCode\npie_lm &lt;- lm(size ~ latitude, data = pie_crab)\n\n#view the results of the linear model\nsummary(pie_lm)\n\n\n\nCall:\nlm(formula = size ~ latitude, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.8376 -1.8797  0.1144  1.9484  6.9280 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -3.62442    1.27405  -2.845  0.00468 ** \nlatitude     0.48512    0.03359  14.441  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.832 on 390 degrees of freedom\nMultiple R-squared:  0.3484,    Adjusted R-squared:  0.3467 \nF-statistic: 208.5 on 1 and 390 DF,  p-value: &lt; 2.2e-16\n\n\nOur p-value is indicated in the ‘Pr(&gt;|t|)’ column for ‘latitude’ and at the bottom of these results tells us that latitude does have a significant effect on crab size.\nFrom the results we also have an estimate for latitude (0.49), which reflects the regression coefficient or strength and direction of the effect of latitude, along with the standard error for that estimate (0.03), reflecting the variation.\nLet’s view this visually and fit the linear regression line of best fit.\n\n\nCode\npie_crab |&gt; \n  ggscatter(x = 'latitude', y = 'size', \n            alpha = .35, \n            add = \"reg.line\")"
  },
  {
    "objectID": "lab4.html#predictions-using-a-regression-model",
    "href": "lab4.html#predictions-using-a-regression-model",
    "title": "Lab 4: LTER Network Data",
    "section": "Predictions using a regression model",
    "text": "Predictions using a regression model\nNow that we fit this model, we can use it to predict crab size at different latitudes with predict(). For example, let’s predict carapace width at a latitudes of 32, 36, and 38 degrees. Note that we need to create these values as a new data frame with the same column name used in the data that the model was built from.\n\n\nCode\nnew_lat &lt;- data.frame(latitude = c(32, 36, 38))\n\nbroom::augment(pie_lm, newdata = new_lat)\n\n\n# A tibble: 3 × 2\n  latitude .fitted\n     &lt;dbl&gt;   &lt;dbl&gt;\n1       32    11.9\n2       36    13.8\n3       38    14.8"
  },
  {
    "objectID": "lab4.html#multiple-linear-regression",
    "href": "lab4.html#multiple-linear-regression",
    "title": "Lab 4: LTER Network Data",
    "section": "Multiple Linear Regression",
    "text": "Multiple Linear Regression\nSay we want to model the effect of more than one predictor on crab size. In the data we also have continuous variables for air temperature and water temperature. Let’s model the effect of latitude, air and water temperature on carapace width.\nRunning a multiple linear regression is very similar to the simple linear regression, but now we specify our multiple predictor variables by adding them together with a + sign like this:\n\n\nCode\npie_mlm &lt;- lm(size ~ latitude + air_temp + water_temp, data = pie_crab)\n\nsummary(pie_mlm)\n\n\n\nCall:\nlm(formula = size ~ latitude + air_temp + water_temp, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.7099 -1.7195 -0.0602  1.7823  7.7271 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  77.7460    17.3477   4.482 9.76e-06 ***\nlatitude     -1.0587     0.3174  -3.336 0.000933 ***\nair_temp     -2.4041     0.3844  -6.255 1.05e-09 ***\nwater_temp    0.7563     0.1465   5.162 3.92e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.677 on 388 degrees of freedom\nMultiple R-squared:  0.4206,    Adjusted R-squared:  0.4161 \nF-statistic:  93.9 on 3 and 388 DF,  p-value: &lt; 2.2e-16\n\n\nThese results show an overall p-value for the model, indicating a significant impact of the combination of predictors on crab size, and individual p-values for the effect of each individual predictor on crab size.\nNote however that with multiple regression, one of the assumptions is that there is no correlation between the predictor variables. We can test for correlations among more than two variables with the cor() function. Lets test for correlation between our three predictors:\n\n\nCode\npie_crab |&gt; \n  dplyr::select(latitude, air_temp, water_temp) |&gt; \n  cor()\n\n\n             latitude   air_temp water_temp\nlatitude    1.0000000 -0.9949715 -0.9571738\nair_temp   -0.9949715  1.0000000  0.9632287\nwater_temp -0.9571738  0.9632287  1.0000000\n\n\nIt is usually good practice to remove variables from a multiple linear regression that have a correlation coefficient greater than 0.7/-0.7. These are all highly correlated (with coefficients near 1/-1), therefore they are not the best set of predictors to use for a multiple linear regression in combination. Highly correlated variables have nearly the same ability to predict the outcome (e.g., they do not bring additional information; they bring redundant information) and increase the complexity of the model and therefore the risk of errors.\nIn your assignment, you will perform a multiple linear regression using variables that are less correlated."
  },
  {
    "objectID": "lab4.html#exercises-part-2",
    "href": "lab4.html#exercises-part-2",
    "title": "Lab 4: LTER Network Data",
    "section": "Exercises: Part 2",
    "text": "Exercises: Part 2\n\nAfter completing the ANOVA test (and post-hoc Tukey’s HSD) above to test for significant differences in crab size among 3 different sites: 1) Create a boxplot showing the carapace width for each site where sites are ordered by latitude and 2) report the findings of the statistical test as you would in a scientific paper. Include both the code to create the boxplot and an image of the figure. (10 pts.)\n\n\n\nCode\n# Null: the difference in carapace size is equal across all sites. \n\n# ordering by latitude\nlevels_order &lt;- pie_crab %&gt;%\n  arrange(latitude) %&gt;%\n  pull(site) %&gt;%\n  unique() \n\npie_crab %&gt;%\n  group_by(site) %&gt;%\n  summarise(n_distinct(latitude))\n\n\n# A tibble: 13 × 2\n   site  `n_distinct(latitude)`\n   &lt;chr&gt;                  &lt;int&gt;\n 1 BC                         1\n 2 CC                         1\n 3 CT                         1\n 4 DB                         1\n 5 GTM                        1\n 6 JC                         1\n 7 NB                         1\n 8 NIB                        1\n 9 PIE                        1\n10 RC                         1\n11 SI                         1\n12 VCR                        1\n13 ZI                         1\n\n\nCode\n# boxplot\nggplot(pie_crab, aes(x = site, y = size, fill = site)) +\n  geom_boxplot() +\n  labs(title = \"Carapace Width Across Sites Ordered by Latitude\",\n       x = \"Site\", y = \"Carapace Width (mm)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCode\n  # After conducting an ANOVA test for significant differences in crab size (carapace width) among 3 different sites (GTM, DB, and PIE), it was found that at least one site differed in carapace size compared to the other sites due to the low p-value (&lt; 2e-16). Therefore, we continued on with a post-doc Tukey's HSD test to test the differences between the groups (GTM-DB, PIE-DB, PIE-GTM) to get p-values of 3.0e-07, 2.9e-06, and 0.0e+00, indicating that each pair of sites has statistically significant differences in carapace size. In the boxplot showing the carapace width for all 13 sites ordered by latitude, the median widths varies in size for each, further suggesting that the crab size is significantly different at each site. \n\n\n\nAfter conducting an ANOVA test for significant differences in crab size (carapace width) among 3 different sites (GTM, DB, and PIE), it was found that at least one site differed in carapace size compared to the other sites due to the low p-value (&lt; 2e-16). Therefore, we continued on with a post-doc Tukey’s HSD test to test the differences between the groups (GTM-DB, PIE-DB, PIE-GTM) to get p-values of 3.0e-07, 2.9e-06, and 0.0e+00, indicating that each pair of sites has statistically significant differences in carapace size. In the boxplot showing the carapace width for all 13 sites ordered by latitude, the median widths varies in size for each, further suggesting that the crab size is significantly different at each site.\n\n\nConduct a simple linear regression for the effect of water_temp_sd (a measure reflecting annual variation in water temperature) on carapace width. Report your findings (include code and a sentence reporting the results) AND create a plot with a line of best fit. Include both the code to create the plot and an image of the figure. (10 pts).\n\n\n\nCode\n# Null: variation in water temperature has no effect on crab size\n\n# linear model\npie_lm &lt;- lm(size ~ water_temp_sd, data = pie_crab)\nsummary(pie_lm)\n\n\n\nCall:\nlm(formula = size ~ water_temp_sd, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.9428 -2.6948 -0.2145  2.6573  8.8070 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   13.93728    1.15338  12.084   &lt;2e-16 ***\nwater_temp_sd  0.09938    0.15716   0.632    0.528    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.506 on 390 degrees of freedom\nMultiple R-squared:  0.001024,  Adjusted R-squared:  -0.001537 \nF-statistic: 0.3999 on 1 and 390 DF,  p-value: 0.5275\n\n\nCode\n  # From the linear regression conducted, the large p-value calculated (0.5275) indicates that the water temperature is not a statistically significant predictor of crab size, failing to reject the null hypothesis. \n\n# plotting the linear model \npie_crab %&gt;%\n  ggscatter(x = 'water_temp_sd', y = 'size',\n            alpha = .35,\n            add = \"reg.line\")\n\n\n\n\n\n\n\n\n\nCode\n  # From the linear regression model created, the line is nearly flat, supporting the null hypothesis that variation in water temperature has no effect on crab size.  \n\n\n\nFrom the linear regression conducted, the large p-value calculated (0.5275) indicates that the water temperature is not a statistically significant predictor of crab size, failing to reject the null hypothesis. From the linear regression model created, the line is nearly flat, supporting the null hypothesis that variation in water temperature has no effect on crab size.\n\n\nConduct a multiple linear regression for the effects of latitude, air_temp_sd, and water_temp_sd on carapace width. First check for correlations among the three predictor variables (and report the correlation table) and second report your findings from the multiple linear regression (code and a sentence reporting the results). (10 pts.)\n\n\n\nCode\n# Null: latitude, variation in air temperature, and variation in water temperature has no effect on crab size (by width).\n\n# correlation check\npie_crab %&gt;%\n  dplyr::select(latitude, air_temp_sd, water_temp_sd) %&gt;%\n  cor()\n\n\n                latitude air_temp_sd water_temp_sd\nlatitude      1.00000000   0.7932130    0.04188273\nair_temp_sd   0.79321301   1.0000000    0.40970338\nwater_temp_sd 0.04188273   0.4097034    1.00000000\n\n\nCode\n  # Because the correlation coefficients among latitude, air temperature variation, and water temperature variation were all below +/- 0.8, we included all three predictors in a multiple regression model for crab size.\n\n# multiple linear regression \npie_mlm &lt;- lm(size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)\nsummary(pie_mlm)\n\n\n\nCall:\nlm(formula = size ~ latitude + air_temp_sd + water_temp_sd, data = pie_crab)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-7.7515 -1.8897  0.0506  1.9301  6.6746 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -3.96880    1.54818  -2.564   0.0107 *  \nlatitude       0.55940    0.06413   8.723   &lt;2e-16 ***\nair_temp_sd   -0.41713    0.30559  -1.365   0.1730    \nwater_temp_sd  0.15927    0.16174   0.985   0.3254    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.832 on 388 degrees of freedom\nMultiple R-squared:  0.3516,    Adjusted R-squared:  0.3466 \nF-statistic: 70.13 on 3 and 388 DF,  p-value: &lt; 2.2e-16\n\n\nCode\n  # The multiple linear regression model was highly significant (p &lt; 2.2e-16), and each variable showed a statistically significant effect on carapace width.\n\n\n\nBecause the correlation coefficients among latitude, air temperature variation, and water temperature variation were all below +/- 0.8, we included all three predictors in a multiple regression model for crab size. The multiple linear regression model was highly significant (p &lt; 2.2e-16), and each variable showed a statistically significant effect on carapace width. Therefore, we fail to reject the null hypothesis that none of these factors influence crab size."
  },
  {
    "objectID": "lab4.html#acknowledgements",
    "href": "lab4.html#acknowledgements",
    "title": "Lab 4: LTER Network Data",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nThanks to the developers of lterdatasampler for providing the data set and vignettes that helped guide the creation of this lesson plan."
  },
  {
    "objectID": "lab4.html#citations",
    "href": "lab4.html#citations",
    "title": "Lab 4: LTER Network Data",
    "section": "Citations",
    "text": "Citations\n\nJohnson, D. 2019. Fiddler crab body size in salt marshes from Florida to Massachusetts, USA at PIE and VCR LTER and NOAA NERR sites during summer 2016. ver 1. Environmental Data Initiative. https://doi.org/10.6073/pasta/4c27d2e778d3325d3830a5142e3839bb (Accessed 2021-05-27).\nJohnson DS, Crowley C, Longmire K, Nelson J, Williams B, Wittyngham S. The fiddler crab, Minuca pugnax, follows Bergmann’s rule. Ecol Evol. 2019;00:1–9. https://doi.org/10.1002/ece3.5883\n\nData Source: Gregory, S.V. and I. Arismendi. 2020. Aquatic Vertebrate Population Study in Mack Creek, Andrews Experimental Forest, 1987 to present ver 14. Environmental Data Initiative. https://doi.org/10.6073/pasta/7c78d662e847cdbe33584add8f809165\nKaylor, M.J. and D.R. Warren. 2017. Linking riparian shade and the legacies of forest management to fish and vertebrate biomass in forested streams. Ecosphere 8(6). https://doi.org/10.1002/ecs2.1845"
  }
]